import group_mfn_a as mfn_a
import unittest


class TestGroupMFNAInflection(unittest.TestCase):

    def test_group_mfn_a_ordinary_m(self):
        self.assertEqual(['судија', 'судије', 'судији', 'судију', 'судијо', 'судијом', 'судији',
                          'судије', 'судија', 'судијама', 'судије', 'судије', 'судијама', 'судијама'],
                         mfn_a.inflect('судија'))

    def test_group_mfn_a_ordinary_f(self):
        self.assertEqual(['жена', 'жене', 'жени', 'жену', 'жено', 'женом', 'жени',
                          'жене', 'жена', 'женама', 'жене', 'жене', 'женама', 'женама'],
                         mfn_a.inflect('жена'))

    def test_group_mfn_a_ending_with_ica(self):
        self.assertEqual(['учитељица', 'учитељице', 'учитељици', 'учитељицу', 'учитељице', 'учитељицом', 'учитељици',
                          'учитељице', 'учитељица', 'учитељицама', 'учитељице', 'учитељице', 'учитељицама', 'учитељицама'],
                         mfn_a.inflect('учитељица'))

    def test_group_mfn_a_multisyllable_proper_noun(self):
        self.assertEqual(['Небојша', 'Небојше', 'Небојши', 'Небојшу', 'Небојша', 'Небојшом', 'Небојши',
                          'Небојше', 'Небојша', 'Небојшама', 'Небојше', 'Небојше', 'Небојшама', 'Небојшама'],
                         mfn_a.inflect('Небојша'))

    def test_group_mfn_a_bisyllable_proper_noun(self):
        self.assertEqual(['Зора', 'Зоре', 'Зори', 'Зору', 'Зоро', 'Зором', 'Зори',
                          'Зоре', 'Зора', 'Зорама', 'Зоре', 'Зоре', 'Зорама', 'Зорама'],
                         mfn_a.inflect('Зора'))

    def test_group_mfn_a_ending_with_zd_and_more(self):
        self.assertEqual(['звезда', 'звезде', 'звезди', 'звезду', 'звездо', 'звездом', 'звезди',
                         'звезде', 'звезда', 'звездама', 'звезде', 'звезде', 'звездама', 'звездама'],
                         mfn_a.inflect('звезда'))

    def test_group_mfn_a_ending_with_tnj_and_more(self):
        self.assertEqual(['претња', 'претње', 'претњи', 'претњу', 'претњо', 'претњом', 'претњи',
                         'претње', 'претњи', 'претњама', 'претње', 'претње', 'претњама', 'претњама'],
                         mfn_a.inflect('претња'))

    def test_group_mfn_a_nepostojano_a(self):
        self.assertEqual(['девојка', 'девојке', 'девојки', 'девојку', 'девојко', 'девојком', 'девојки',
                         'девојке', 'девојака', 'девојкама', 'девојке', 'девојке', 'девојкама', 'девојкама'],
                         mfn_a.inflect('девојка'))
        self.assertEqual(['земља', 'земље', 'земљи', 'земљу', 'земљо', 'земљом', 'земљи',
                         'земље', 'земаља', 'земљама', 'земље', 'земље', 'земљама', 'земљама'],
                         mfn_a.inflect('земља'))
        self.assertEqual(['овца', 'овце', 'овци', 'овцу', 'овцо', 'овцом', 'овци',
                         'овце', 'оваца', 'овцама', 'овце', 'овце', 'овцама', 'овцама'],
                         mfn_a.inflect('овца'))

if __name__ == '__main__':
    unittest.main()
